{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _seedrandom = require('seedrandom');\n\nvar _seedrandom2 = _interopRequireDefault(_seedrandom);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nvar Boundingbox = function (_Component) {\n  (0, _inherits3.default)(Boundingbox, _Component);\n\n  function Boundingbox(props) {\n    (0, _classCallCheck3.default)(this, Boundingbox);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Boundingbox.__proto__ || (0, _getPrototypeOf2.default)(Boundingbox)).call(this, props));\n\n    _this.state = {\n      canvasCreated: false,\n      hoverIndex: -1,\n      segmentColors: []\n    };\n\n    if (props.segmentationJsonUrl) {\n      fetch(props.segmentationJsonUrl).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n        if (response.body && response.body.predictions && response.body.predictions[0] && response.body.predictions[0].vals && response.body.predictions[0].vals.length > 0) {\n          _this.setState({\n            isSegmented: false\n          });\n\n          _this.renderSegmentation(response.body.predictions[0].vals);\n        }\n      });\n    }\n\n    return _this;\n  }\n\n  (0, _createClass3.default)(Boundingbox, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var ctx = this.canvas.getContext('2d');\n      var background = new Image();\n      background.src = this.props.options.base64Image ? 'data:image/png;base64,' + this.props.image : this.props.image; // Make sure the image is loaded first otherwise nothing will draw.\n\n      background.onload = function () {\n        _this2.canvas.width = background.width;\n        _this2.canvas.height = background.height;\n        ctx.drawImage(background, 0, 0);\n\n        _this2.renderBoxes();\n\n        var hasSegmentedState = _this2.state.pixelSegmentation && _this2.state.pixelSegmentation.length > 0 && !_this2.state.isSegmented;\n        var hasSegmentedProps = _this2.props.pixelSegmentation && _this2.props.pixelSegmentation.length > 0 && !_this2.state.isSegmented;\n        var hasSegmentionMasks = _this2.props.segmentationMasks && _this2.props.segmentationMasks.length > 0 && !_this2.state.isSegmented;\n        if (hasSegmentedState) _this2.renderSegmentation(_this2.state.pixelSegmentation);\n        if (hasSegmentedProps) _this2.renderSegmentation(_this2.props.pixelSegmentation);\n        if (hasSegmentionMasks) _this2.renderSegmentationMasks();\n\n        _this2.canvas.onmousemove = function (e) {\n          // Get the current mouse position\n          var r = _this2.canvas.getBoundingClientRect();\n\n          var scaleX = _this2.canvas.width / r.width;\n          var scaleY = _this2.canvas.height / r.height;\n          var x = (e.clientX - r.left) * scaleX;\n          var y = (e.clientY - r.top) * scaleY; // ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n          var selectedBox = {\n            index: -1,\n            dimensions: null\n          };\n\n          if (_this2.props.boxes && _this2.props.boxes.length > 0) {\n            _this2.props.boxes.forEach(function (box, index) {\n              if (!box || typeof box === 'undefined') return null;\n              var coord = box.coord ? box.coord : box;\n              var bx = 0,\n                  by = 0,\n                  bw = 0,\n                  bh = 0;\n\n              if (coord.xmin && coord.xmax && coord.ymin && coord.ymax) {\n                var _ref = [coord.xmin, coord.ymax, Math.abs(coord.xmax - coord.xmin), Math.abs(coord.ymax - coord.ymin)]; // coord is an object containing xmin, xmax, ymin, ymax attributes\n                // width is absolute value of (xmax - xmin)\n                // height is absolute value of (ymax - ymin)\n                // absolute value takes care of various possible referentials:\n                //   - sometimes 0,0 is top-left corner\n                //   - sometimes 0,0 is bottom-left corner\n\n                bx = _ref[0];\n                by = _ref[1];\n                bw = _ref[2];\n                bh = _ref[3];\n              } else {\n                var _coord = (0, _slicedToArray3.default)(coord, 4); // coord is an array containing [x, y, width, height] values\n\n\n                bx = _coord[0];\n                by = _coord[1];\n                bw = _coord[2];\n                bh = _coord[3];\n              }\n\n              if (x >= bx && x <= bx + bw && y >= by && y <= by + bh) {\n                // The mouse honestly hits the rect\n                var insideBox = !selectedBox.dimensions || bx >= selectedBox.dimensions[0] && bx <= selectedBox.dimensions[0] + selectedBox.dimensions[2] && by >= selectedBox.dimensions[1] && by <= selectedBox.dimensions[1] + selectedBox.dimensions[3];\n\n                if (insideBox) {\n                  selectedBox.index = index;\n                  selectedBox.dimensions = box;\n                }\n              }\n            });\n          } else if (_this2.state.pixelSegmentation && _this2.state.pixelSegmentation.length > 0) {\n            selectedBox.index = _this2.state.pixelSegmentation[x + _this2.canvas.width * y];\n          }\n\n          _this2.props.onSelected(selectedBox.index);\n\n          _this2.setState({\n            hoverIndex: selectedBox.index\n          });\n        };\n\n        _this2.canvas.onmouseout = function () {\n          _this2.props.onSelected(-1);\n\n          _this2.setState({\n            hoverIndex: -1\n          }); // this.renderBoxes();\n\n        };\n      };\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var ctx = this.canvas.getContext('2d');\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n      var background = new Image();\n      background.src = this.props.options.base64Image ? 'data:image/png;base64,' + this.props.image : this.props.image;\n      ctx.drawImage(background, 0, 0);\n      this.setState({\n        hoverIndex: nextProps.selectedIndex\n      });\n\n      if (nextProps.pixelSegmentation || nextProps.segmentationMasks) {\n        this.setState({\n          isSegmented: false\n        });\n      }\n\n      return true;\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.renderBoxes();\n    }\n  }, {\n    key: 'segmentColor',\n    value: function segmentColor(classIndex) {\n      var segmentColors = this.state.segmentColors;\n\n      if (segmentColors[classIndex] && segmentColors[classIndex].length === 3) {\n        return segmentColors[classIndex];\n      }\n\n      var r = void 0;\n      var g = void 0;\n      var b = void 0;\n\n      if (this.props.segmentationColors && this.props.segmentationColors[classIndex]) {\n        var hex = this.props.segmentationColors[classIndex];\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        r = parseInt(result[1], 16);\n        g = parseInt(result[2], 16);\n        b = parseInt(result[3], 16);\n      } else {\n        var random = (0, _seedrandom2.default)(classIndex);\n        r = Math.floor(random() * 255);\n        g = Math.floor(random() * 255);\n        b = Math.floor(random() * 255);\n      }\n\n      segmentColors[classIndex] = [r, g, b];\n      this.setState({\n        segmentColors: segmentColors\n      });\n      return [r, g, b];\n    }\n  }, {\n    key: 'renderBox',\n    value: function renderBox(box, index) {\n      if (!box || typeof box === 'undefined') return null;\n      var color = this.props.options.colors.normal;\n\n      if (this.state.hoverIndex >= 0) {\n        color = this.props.options.colors.unselected;\n      }\n\n      if (index === this.state.hoverIndex) {\n        color = this.props.options.colors.selected;\n      }\n\n      var lineWidth = 2;\n\n      if (this.canvas.width > 600) {\n        lineWidth = 3;\n      }\n\n      if (this.canvas.width > 1000) {\n        lineWidth = 5;\n      }\n\n      this.props.drawBox(this.canvas, box, color, lineWidth);\n\n      if (box.label) {\n        this.props.drawLabel(this.canvas, box);\n      }\n\n      ;\n    }\n  }, {\n    key: 'renderBoxes',\n    value: function renderBoxes() {\n      var _this3 = this;\n\n      if (this.props.boxes && this.props.boxes.length > 0) {\n        this.props.boxes.map(function (box, index) {\n          var selected = index === _this3.state.hoverIndex;\n          return {\n            box: box,\n            index: index,\n            selected: selected\n          };\n        }).sort(function (a) {\n          return a.selected ? 1 : -1;\n        }).forEach(function (box) {\n          return _this3.renderBox(box.box, box.index);\n        });\n      }\n    }\n  }, {\n    key: 'renderSegmentation',\n    value: function renderSegmentation(segmentation) {\n      var ctx = null;\n      var imgd = null;\n\n      if (this.props.separateSegmentation && this.segCanvas) {\n        this.segCanvas.width = this.canvas.width;\n        this.segCanvas.height = this.canvas.height;\n        ctx = this.segCanvas.getContext('2d');\n        imgd = ctx.getImageData(0, 0, this.segCanvas.width, this.segCanvas.height);\n        var pix = imgd.data;\n\n        for (var i = 0, j = 0, n = pix.length; i < n; i += 4, j += 1) {\n          var segmentClass = segmentation[j];\n          var segmentColor = this.segmentColor(segmentClass);\n          pix[i] = segmentColor[0];\n          pix[i + 1] = segmentColor[1];\n          pix[i + 2] = segmentColor[2];\n          pix[i + 3] = 255;\n        }\n      } else {\n        ctx = this.canvas.getContext('2d');\n        imgd = ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n        var _pix = imgd.data;\n\n        for (var i = 0, j = 0, n = _pix.length; i < n; i += 4, j += 1) {\n          var _segmentClass = segmentation[j];\n\n          var _segmentColor = this.segmentColor(_segmentClass);\n\n          _pix[i] = Math.round((_pix[i] + _segmentColor[0]) / 2);\n          _pix[i + 1] = Math.round((_pix[i + 1] + _segmentColor[1]) / 2);\n          _pix[i + 2] = Math.round((_pix[i + 2] + _segmentColor[2]) / 2);\n          _pix[i + 3] = 200;\n        }\n      }\n\n      ctx.putImageData(imgd, 0, 0);\n      this.setState({\n        isSegmented: true\n      });\n    }\n  }, {\n    key: 'renderSegmentationMasks',\n    value: function renderSegmentationMasks() {\n      var _this4 = this;\n\n      var _props = this.props,\n          boxes = _props.boxes,\n          segmentationMasks = _props.segmentationMasks,\n          segmentationTransparency = _props.segmentationTransparency;\n      this.segCanvas.width = this.canvas.width;\n      this.segCanvas.height = this.canvas.height;\n      var ctx = this.segCanvas.getContext('2d');\n      segmentationMasks.forEach(function (mask, index) {\n        // Fetch segment color,\n        // using box label or current mask index\n        var segmentColor = _this4.segmentColor(boxes[index].label ? boxes[index].label : index); // Fetch image data\n        // using the box coordinates\n        // and the mask dimensions\n\n\n        var maskData = ctx.getImageData(parseInt(boxes[index].xmin, 10), parseInt(boxes[index].ymin, 10), mask.width, mask.height); // Fill image data with new mask color\n\n        for (var i = 0, j = 0; i < maskData.data.length; j++, i += 4) {\n          if (mask.data[j] > 0) {\n            maskData.data[i] = segmentColor[0];\n            maskData.data[i + 1] = segmentColor[1];\n            maskData.data[i + 2] = segmentColor[2];\n            maskData.data[i + 3] = segmentationTransparency;\n          }\n        } // Put new mask data on displayed canvas\n\n\n        ctx.putImageData(maskData, parseInt(boxes[index].xmin, 10), parseInt(boxes[index].ymin, 10), 0, 0, mask.width, mask.height);\n      });\n      this.setState({\n        isSegmented: true\n      });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      return _react2.default.createElement('div', {\n        className: this.props.className\n      }, _react2.default.createElement('canvas', {\n        className: 'boundingBoxCanvas',\n        style: this.props.options.style,\n        ref: function ref(canvas) {\n          _this5.canvas = canvas;\n        }\n      }), this.props.separateSegmentation ? _react2.default.createElement('canvas', {\n        className: 'boundingSegmentationCanvas',\n        style: this.props.options.style,\n        ref: function ref(canvas) {\n          _this5.segCanvas = canvas;\n        }\n      }) : null);\n    }\n  }]);\n  return Boundingbox;\n}(_react.Component);\n/* global Image */\n\n\nBoundingbox.propTypes = {\n  image: _propTypes2.default.string,\n  boxes: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.array), _propTypes2.default.arrayOf(_propTypes2.default.object)]),\n  separateSegmentation: _propTypes2.default.bool,\n  segmentationJsonUrl: _propTypes2.default.string,\n  segmentationColors: _propTypes2.default.array,\n  segmentationMasks: _propTypes2.default.array,\n  segmentationTransparency: _propTypes2.default.number,\n  selectedIndex: _propTypes2.default.number,\n  drawBox: _propTypes2.default.func,\n  drawLabel: _propTypes2.default.func,\n  onSelected: _propTypes2.default.func,\n  options: _propTypes2.default.shape({\n    colors: _propTypes2.default.shape({\n      normal: _propTypes2.default.string,\n      selected: _propTypes2.default.string,\n      unselected: _propTypes2.default.string\n    }),\n    style: _propTypes2.default.object,\n    base64Image: _propTypes2.default.bool\n  })\n};\nBoundingbox.defaultProps = {\n  separateSegmentation: false,\n  segmentationTransparency: 190,\n  onSelected: function onSelected() {},\n  drawBox: function drawBox(canvas, box, color, lineWidth) {\n    if (!box || typeof box === 'undefined') return null;\n    var ctx = canvas.getContext('2d');\n    var coord = box.coord ? box.coord : box;\n    var x = 0,\n        y = 0,\n        width = 0,\n        height = 0;\n\n    if (coord.xmin && coord.xmax && coord.ymin && coord.ymax) {\n      var _ref2 = [coord.xmin, coord.ymax, Math.abs(coord.xmax - coord.xmin), Math.abs(coord.ymax - coord.ymin)]; // coord is an object containing xmin, xmax, ymin, ymax attributes\n      // width is absolute value of (xmax - xmin)\n      // height is absolute value of (ymax - ymin)\n      // absolute value takes care of various possible referentials:\n      //   - sometimes 0,0 is top-left corner\n      //   - sometimes 0,0 is bottom-left corner\n\n      x = _ref2[0];\n      y = _ref2[1];\n      width = _ref2[2];\n      height = _ref2[3];\n    } else {\n      var _coord2 = (0, _slicedToArray3.default)(coord, 4); // coord is an array containing [x, y, width, height] values\n\n\n      x = _coord2[0];\n      y = _coord2[1];\n      width = _coord2[2];\n      height = _coord2[3];\n    }\n\n    if (x < lineWidth / 2) {\n      x = lineWidth / 2;\n    }\n\n    if (y < lineWidth / 2) {\n      y = lineWidth / 2;\n    }\n\n    if (x + width > canvas.width) {\n      width = canvas.width - lineWidth - x;\n    }\n\n    if (y + height > canvas.height) {\n      height = canvas.height - lineWidth - y;\n    } // Left segment\n\n\n    var tenPercent = width / 10;\n    var ninetyPercent = 9 * tenPercent;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + tenPercent, y);\n    ctx.lineTo(x, y);\n    ctx.lineTo(x, y + height);\n    ctx.lineTo(x + tenPercent, y + height);\n    ctx.stroke(); // Right segment\n\n    ctx.beginPath();\n    ctx.moveTo(x + ninetyPercent, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x + ninetyPercent, y + height);\n    ctx.stroke();\n  },\n  drawLabel: function drawLabel(canvas, box) {\n    if (!box || typeof box === 'undefined') return null;\n    var ctx = canvas.getContext('2d');\n    var coord = box.coord ? box.coord : box;\n    var x = 0,\n        y = 0,\n        width = 0,\n        height = 0;\n\n    if (coord.xmin && coord.xmax && coord.ymin && coord.ymax) {\n      var _ref3 = [coord.xmin, coord.ymax, Math.abs(coord.xmax - coord.xmin), Math.abs(coord.ymax - coord.ymin)]; // coord is an object containing xmin, xmax, ymin, ymax attributes\n      // width is absolute value of (xmax - xmin)\n      // height is absolute value of (ymax - ymin)\n      // absolute value takes care of various possible referentials:\n      //   - sometimes 0,0 is top-left corner\n      //   - sometimes 0,0 is bottom-left corner\n\n      x = _ref3[0];\n      y = _ref3[1];\n      width = _ref3[2];\n      height = _ref3[3];\n    } else {\n      var _coord3 = (0, _slicedToArray3.default)(coord, 4); // coord is an array containing [x, y, width, height] values\n\n\n      x = _coord3[0];\n      y = _coord3[1];\n      width = _coord3[2];\n      height = _coord3[3];\n    }\n\n    ctx.font = '60px Arial';\n    ctx.fillStyle = 'rgba(225,0,0,1)';\n    ctx.fillText(box.label, x, y + height);\n  },\n  options: {\n    colors: {\n      normal: 'rgba(255,225,255,1)',\n      selected: 'rgba(0,225,204,1)',\n      unselected: 'rgba(100,100,100,1)'\n    },\n    style: {\n      maxWidth: '100%',\n      maxHeight: '90vh'\n    },\n    base64Image: false\n  }\n};\nexports.default = Boundingbox;\nmodule.exports = exports['default'];","map":{"version":3,"sources":["/Users/airbook/Desktop/SaiTeja_Transin/bounding-box/node_modules/react-bounding-box/dist/react-bounding-box.js"],"names":["Object","defineProperty","exports","value","_slicedToArray2","require","_slicedToArray3","_interopRequireDefault","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_react","_react2","_propTypes","_propTypes2","_seedrandom","_seedrandom2","obj","__esModule","default","Boundingbox","_Component","props","_this","__proto__","call","state","canvasCreated","hoverIndex","segmentColors","segmentationJsonUrl","fetch","then","response","json","body","predictions","vals","length","setState","isSegmented","renderSegmentation","key","componentDidMount","_this2","ctx","canvas","getContext","background","Image","src","options","base64Image","image","onload","width","height","drawImage","renderBoxes","hasSegmentedState","pixelSegmentation","hasSegmentedProps","hasSegmentionMasks","segmentationMasks","renderSegmentationMasks","onmousemove","e","r","getBoundingClientRect","scaleX","scaleY","x","clientX","left","y","clientY","top","selectedBox","index","dimensions","boxes","forEach","box","coord","bx","by","bw","bh","xmin","xmax","ymin","ymax","_ref","Math","abs","_coord","insideBox","onSelected","onmouseout","componentWillReceiveProps","nextProps","clearRect","selectedIndex","componentDidUpdate","segmentColor","classIndex","g","b","segmentationColors","hex","result","exec","parseInt","random","floor","renderBox","color","colors","normal","unselected","selected","lineWidth","drawBox","label","drawLabel","_this3","map","sort","a","segmentation","imgd","separateSegmentation","segCanvas","getImageData","pix","data","i","j","n","segmentClass","_pix","_segmentClass","_segmentColor","round","putImageData","_this4","_props","segmentationTransparency","mask","maskData","render","_this5","createElement","className","style","ref","Component","propTypes","string","oneOfType","arrayOf","array","object","bool","number","func","shape","defaultProps","_ref2","_coord2","tenPercent","ninetyPercent","strokeStyle","beginPath","moveTo","lineTo","stroke","_ref3","_coord3","font","fillStyle","fillText","maxWidth","maxHeight","module"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slicedToArray2 = require('babel-runtime/helpers/slicedToArray');\n\nvar _slicedToArray3 = _interopRequireDefault(_slicedToArray2);\n\nvar _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = require('babel-runtime/helpers/createClass');\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = require('babel-runtime/helpers/inherits');\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _seedrandom = require('seedrandom');\n\nvar _seedrandom2 = _interopRequireDefault(_seedrandom);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Boundingbox = function (_Component) {\n  (0, _inherits3.default)(Boundingbox, _Component);\n\n  function Boundingbox(props) {\n    (0, _classCallCheck3.default)(this, Boundingbox);\n\n    var _this = (0, _possibleConstructorReturn3.default)(this, (Boundingbox.__proto__ || (0, _getPrototypeOf2.default)(Boundingbox)).call(this, props));\n\n    _this.state = {\n      canvasCreated: false,\n      hoverIndex: -1,\n      segmentColors: []\n    };\n\n    if (props.segmentationJsonUrl) {\n      fetch(props.segmentationJsonUrl).then(function (response) {\n        return response.json();\n      }).then(function (response) {\n\n        if (response.body && response.body.predictions && response.body.predictions[0] && response.body.predictions[0].vals && response.body.predictions[0].vals.length > 0) {\n\n          _this.setState({ isSegmented: false });\n          _this.renderSegmentation(response.body.predictions[0].vals);\n        }\n      });\n    }\n    return _this;\n  }\n\n  (0, _createClass3.default)(Boundingbox, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var ctx = this.canvas.getContext('2d');\n\n      var background = new Image();\n      background.src = this.props.options.base64Image ? 'data:image/png;base64,' + this.props.image : this.props.image;\n\n      // Make sure the image is loaded first otherwise nothing will draw.\n      background.onload = function () {\n        _this2.canvas.width = background.width;\n        _this2.canvas.height = background.height;\n\n        ctx.drawImage(background, 0, 0);\n        _this2.renderBoxes();\n\n        var hasSegmentedState = _this2.state.pixelSegmentation && _this2.state.pixelSegmentation.length > 0 && !_this2.state.isSegmented;\n\n        var hasSegmentedProps = _this2.props.pixelSegmentation && _this2.props.pixelSegmentation.length > 0 && !_this2.state.isSegmented;\n\n        var hasSegmentionMasks = _this2.props.segmentationMasks && _this2.props.segmentationMasks.length > 0 && !_this2.state.isSegmented;\n\n        if (hasSegmentedState) _this2.renderSegmentation(_this2.state.pixelSegmentation);\n\n        if (hasSegmentedProps) _this2.renderSegmentation(_this2.props.pixelSegmentation);\n\n        if (hasSegmentionMasks) _this2.renderSegmentationMasks();\n\n        _this2.canvas.onmousemove = function (e) {\n          // Get the current mouse position\n          var r = _this2.canvas.getBoundingClientRect();\n          var scaleX = _this2.canvas.width / r.width;\n          var scaleY = _this2.canvas.height / r.height;\n          var x = (e.clientX - r.left) * scaleX;\n          var y = (e.clientY - r.top) * scaleY;\n\n          // ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n          var selectedBox = { index: -1, dimensions: null };\n\n          if (_this2.props.boxes && _this2.props.boxes.length > 0) {\n\n            _this2.props.boxes.forEach(function (box, index) {\n\n              if (!box || typeof box === 'undefined') return null;\n\n              var coord = box.coord ? box.coord : box;\n\n              var bx = 0,\n                  by = 0,\n                  bw = 0,\n                  bh = 0;\n\n\n              if (coord.xmin && coord.xmax && coord.ymin && coord.ymax) {\n                var _ref = [coord.xmin, coord.ymax, Math.abs(coord.xmax - coord.xmin), Math.abs(coord.ymax - coord.ymin)];\n\n                // coord is an object containing xmin, xmax, ymin, ymax attributes\n                // width is absolute value of (xmax - xmin)\n                // height is absolute value of (ymax - ymin)\n                // absolute value takes care of various possible referentials:\n                //   - sometimes 0,0 is top-left corner\n                //   - sometimes 0,0 is bottom-left corner\n\n                bx = _ref[0];\n                by = _ref[1];\n                bw = _ref[2];\n                bh = _ref[3];\n              } else {\n                var _coord = (0, _slicedToArray3.default)(coord, 4);\n\n                // coord is an array containing [x, y, width, height] values\n\n\n                bx = _coord[0];\n                by = _coord[1];\n                bw = _coord[2];\n                bh = _coord[3];\n              }\n\n              if (x >= bx && x <= bx + bw && y >= by && y <= by + bh) {\n                // The mouse honestly hits the rect\n                var insideBox = !selectedBox.dimensions || bx >= selectedBox.dimensions[0] && bx <= selectedBox.dimensions[0] + selectedBox.dimensions[2] && by >= selectedBox.dimensions[1] && by <= selectedBox.dimensions[1] + selectedBox.dimensions[3];\n                if (insideBox) {\n                  selectedBox.index = index;\n                  selectedBox.dimensions = box;\n                }\n              }\n            });\n          } else if (_this2.state.pixelSegmentation && _this2.state.pixelSegmentation.length > 0) {\n            selectedBox.index = _this2.state.pixelSegmentation[x + _this2.canvas.width * y];\n          }\n\n          _this2.props.onSelected(selectedBox.index);\n          _this2.setState({ hoverIndex: selectedBox.index });\n        };\n\n        _this2.canvas.onmouseout = function () {\n          _this2.props.onSelected(-1);\n          _this2.setState({ hoverIndex: -1 });\n          // this.renderBoxes();\n        };\n      };\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n\n      var ctx = this.canvas.getContext('2d');\n      ctx.clearRect(0, 0, this.canvas.width, this.canvas.height);\n\n      var background = new Image();\n      background.src = this.props.options.base64Image ? 'data:image/png;base64,' + this.props.image : this.props.image;\n\n      ctx.drawImage(background, 0, 0);\n      this.setState({ hoverIndex: nextProps.selectedIndex });\n      if (nextProps.pixelSegmentation || nextProps.segmentationMasks) {\n        this.setState({\n          isSegmented: false\n        });\n      }\n      return true;\n    }\n  }, {\n    key: 'componentDidUpdate',\n    value: function componentDidUpdate() {\n      this.renderBoxes();\n    }\n  }, {\n    key: 'segmentColor',\n    value: function segmentColor(classIndex) {\n\n      var segmentColors = this.state.segmentColors;\n\n      if (segmentColors[classIndex] && segmentColors[classIndex].length === 3) {\n        return segmentColors[classIndex];\n      }\n\n      var r = void 0;\n      var g = void 0;\n      var b = void 0;\n\n      if (this.props.segmentationColors && this.props.segmentationColors[classIndex]) {\n        var hex = this.props.segmentationColors[classIndex];\n        var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n        r = parseInt(result[1], 16);\n        g = parseInt(result[2], 16);\n        b = parseInt(result[3], 16);\n      } else {\n        var random = (0, _seedrandom2.default)(classIndex);\n        r = Math.floor(random() * 255);\n        g = Math.floor(random() * 255);\n        b = Math.floor(random() * 255);\n      }\n\n      segmentColors[classIndex] = [r, g, b];\n      this.setState({ segmentColors: segmentColors });\n\n      return [r, g, b];\n    }\n  }, {\n    key: 'renderBox',\n    value: function renderBox(box, index) {\n\n      if (!box || typeof box === 'undefined') return null;\n\n      var color = this.props.options.colors.normal;\n      if (this.state.hoverIndex >= 0) {\n        color = this.props.options.colors.unselected;\n      }\n      if (index === this.state.hoverIndex) {\n        color = this.props.options.colors.selected;\n      }\n\n      var lineWidth = 2;\n      if (this.canvas.width > 600) {\n        lineWidth = 3;\n      }\n      if (this.canvas.width > 1000) {\n        lineWidth = 5;\n      }\n\n      this.props.drawBox(this.canvas, box, color, lineWidth);\n      if (box.label) {\n        this.props.drawLabel(this.canvas, box);\n      };\n    }\n  }, {\n    key: 'renderBoxes',\n    value: function renderBoxes() {\n      var _this3 = this;\n\n      if (this.props.boxes && this.props.boxes.length > 0) {\n\n        this.props.boxes.map(function (box, index) {\n          var selected = index === _this3.state.hoverIndex;\n          return { box: box, index: index, selected: selected };\n        }).sort(function (a) {\n          return a.selected ? 1 : -1;\n        }).forEach(function (box) {\n          return _this3.renderBox(box.box, box.index);\n        });\n      }\n    }\n  }, {\n    key: 'renderSegmentation',\n    value: function renderSegmentation(segmentation) {\n\n      var ctx = null;\n      var imgd = null;\n\n      if (this.props.separateSegmentation && this.segCanvas) {\n\n        this.segCanvas.width = this.canvas.width;\n        this.segCanvas.height = this.canvas.height;\n        ctx = this.segCanvas.getContext('2d');\n        imgd = ctx.getImageData(0, 0, this.segCanvas.width, this.segCanvas.height);\n        var pix = imgd.data;\n\n        for (var i = 0, j = 0, n = pix.length; i < n; i += 4, j += 1) {\n          var segmentClass = segmentation[j];\n          var segmentColor = this.segmentColor(segmentClass);\n          pix[i] = segmentColor[0];\n          pix[i + 1] = segmentColor[1];\n          pix[i + 2] = segmentColor[2];\n          pix[i + 3] = 255;\n        }\n      } else {\n\n        ctx = this.canvas.getContext('2d');\n        imgd = ctx.getImageData(0, 0, this.canvas.width, this.canvas.height);\n        var _pix = imgd.data;\n\n        for (var i = 0, j = 0, n = _pix.length; i < n; i += 4, j += 1) {\n          var _segmentClass = segmentation[j];\n          var _segmentColor = this.segmentColor(_segmentClass);\n          _pix[i] = Math.round((_pix[i] + _segmentColor[0]) / 2);\n          _pix[i + 1] = Math.round((_pix[i + 1] + _segmentColor[1]) / 2);\n          _pix[i + 2] = Math.round((_pix[i + 2] + _segmentColor[2]) / 2);\n          _pix[i + 3] = 200;\n        }\n      }\n\n      ctx.putImageData(imgd, 0, 0);\n      this.setState({ isSegmented: true });\n    }\n  }, {\n    key: 'renderSegmentationMasks',\n    value: function renderSegmentationMasks() {\n      var _this4 = this;\n\n      var _props = this.props,\n          boxes = _props.boxes,\n          segmentationMasks = _props.segmentationMasks,\n          segmentationTransparency = _props.segmentationTransparency;\n\n\n      this.segCanvas.width = this.canvas.width;\n      this.segCanvas.height = this.canvas.height;\n      var ctx = this.segCanvas.getContext('2d');\n\n      segmentationMasks.forEach(function (mask, index) {\n\n        // Fetch segment color,\n        // using box label or current mask index\n        var segmentColor = _this4.segmentColor(boxes[index].label ? boxes[index].label : index);\n\n        // Fetch image data\n        // using the box coordinates\n        // and the mask dimensions\n        var maskData = ctx.getImageData(parseInt(boxes[index].xmin, 10), parseInt(boxes[index].ymin, 10), mask.width, mask.height);\n\n        // Fill image data with new mask color\n        for (var i = 0, j = 0; i < maskData.data.length; j++, i += 4) {\n          if (mask.data[j] > 0) {\n            maskData.data[i] = segmentColor[0];\n            maskData.data[i + 1] = segmentColor[1];\n            maskData.data[i + 2] = segmentColor[2];\n            maskData.data[i + 3] = segmentationTransparency;\n          }\n        }\n\n        // Put new mask data on displayed canvas\n        ctx.putImageData(maskData, parseInt(boxes[index].xmin, 10), parseInt(boxes[index].ymin, 10), 0, 0, mask.width, mask.height);\n      });\n\n      this.setState({ isSegmented: true });\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this5 = this;\n\n      return _react2.default.createElement(\n        'div',\n        { className: this.props.className },\n        _react2.default.createElement('canvas', {\n          className: 'boundingBoxCanvas',\n          style: this.props.options.style,\n          ref: function ref(canvas) {\n            _this5.canvas = canvas;\n          }\n        }),\n        this.props.separateSegmentation ? _react2.default.createElement('canvas', {\n          className: 'boundingSegmentationCanvas',\n          style: this.props.options.style,\n          ref: function ref(canvas) {\n            _this5.segCanvas = canvas;\n          }\n        }) : null\n      );\n    }\n  }]);\n  return Boundingbox;\n}(_react.Component); /* global Image */\n\nBoundingbox.propTypes = {\n  image: _propTypes2.default.string,\n  boxes: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.array), _propTypes2.default.arrayOf(_propTypes2.default.object)]),\n  separateSegmentation: _propTypes2.default.bool,\n  segmentationJsonUrl: _propTypes2.default.string,\n  segmentationColors: _propTypes2.default.array,\n  segmentationMasks: _propTypes2.default.array,\n  segmentationTransparency: _propTypes2.default.number,\n  selectedIndex: _propTypes2.default.number,\n  drawBox: _propTypes2.default.func,\n  drawLabel: _propTypes2.default.func,\n  onSelected: _propTypes2.default.func,\n  options: _propTypes2.default.shape({\n    colors: _propTypes2.default.shape({\n      normal: _propTypes2.default.string,\n      selected: _propTypes2.default.string,\n      unselected: _propTypes2.default.string\n    }),\n    style: _propTypes2.default.object,\n    base64Image: _propTypes2.default.bool\n  })\n};\n\nBoundingbox.defaultProps = {\n\n  separateSegmentation: false,\n  segmentationTransparency: 190,\n  onSelected: function onSelected() {},\n  drawBox: function drawBox(canvas, box, color, lineWidth) {\n\n    if (!box || typeof box === 'undefined') return null;\n\n    var ctx = canvas.getContext('2d');\n\n    var coord = box.coord ? box.coord : box;\n\n    var x = 0,\n        y = 0,\n        width = 0,\n        height = 0;\n\n\n    if (coord.xmin && coord.xmax && coord.ymin && coord.ymax) {\n      var _ref2 = [coord.xmin, coord.ymax, Math.abs(coord.xmax - coord.xmin), Math.abs(coord.ymax - coord.ymin)];\n\n      // coord is an object containing xmin, xmax, ymin, ymax attributes\n      // width is absolute value of (xmax - xmin)\n      // height is absolute value of (ymax - ymin)\n      // absolute value takes care of various possible referentials:\n      //   - sometimes 0,0 is top-left corner\n      //   - sometimes 0,0 is bottom-left corner\n\n      x = _ref2[0];\n      y = _ref2[1];\n      width = _ref2[2];\n      height = _ref2[3];\n    } else {\n      var _coord2 = (0, _slicedToArray3.default)(coord, 4);\n\n      // coord is an array containing [x, y, width, height] values\n\n\n      x = _coord2[0];\n      y = _coord2[1];\n      width = _coord2[2];\n      height = _coord2[3];\n    }\n\n    if (x < lineWidth / 2) {\n      x = lineWidth / 2;\n    }\n    if (y < lineWidth / 2) {\n      y = lineWidth / 2;\n    }\n\n    if (x + width > canvas.width) {\n      width = canvas.width - lineWidth - x;\n    }\n    if (y + height > canvas.height) {\n      height = canvas.height - lineWidth - y;\n    }\n\n    // Left segment\n    var tenPercent = width / 10;\n    var ninetyPercent = 9 * tenPercent;\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.beginPath();\n    ctx.moveTo(x + tenPercent, y);\n    ctx.lineTo(x, y);\n    ctx.lineTo(x, y + height);\n    ctx.lineTo(x + tenPercent, y + height);\n    ctx.stroke();\n\n    // Right segment\n    ctx.beginPath();\n    ctx.moveTo(x + ninetyPercent, y);\n    ctx.lineTo(x + width, y);\n    ctx.lineTo(x + width, y + height);\n    ctx.lineTo(x + ninetyPercent, y + height);\n    ctx.stroke();\n  },\n  drawLabel: function drawLabel(canvas, box) {\n\n    if (!box || typeof box === 'undefined') return null;\n\n    var ctx = canvas.getContext('2d');\n\n    var coord = box.coord ? box.coord : box;\n\n    var x = 0,\n        y = 0,\n        width = 0,\n        height = 0;\n\n\n    if (coord.xmin && coord.xmax && coord.ymin && coord.ymax) {\n      var _ref3 = [coord.xmin, coord.ymax, Math.abs(coord.xmax - coord.xmin), Math.abs(coord.ymax - coord.ymin)];\n\n      // coord is an object containing xmin, xmax, ymin, ymax attributes\n      // width is absolute value of (xmax - xmin)\n      // height is absolute value of (ymax - ymin)\n      // absolute value takes care of various possible referentials:\n      //   - sometimes 0,0 is top-left corner\n      //   - sometimes 0,0 is bottom-left corner\n\n      x = _ref3[0];\n      y = _ref3[1];\n      width = _ref3[2];\n      height = _ref3[3];\n    } else {\n      var _coord3 = (0, _slicedToArray3.default)(coord, 4);\n\n      // coord is an array containing [x, y, width, height] values\n\n\n      x = _coord3[0];\n      y = _coord3[1];\n      width = _coord3[2];\n      height = _coord3[3];\n    }\n\n    ctx.font = '60px Arial';\n    ctx.fillStyle = 'rgba(225,0,0,1)';\n    ctx.fillText(box.label, x, y + height);\n  },\n\n  options: {\n    colors: {\n      normal: 'rgba(255,225,255,1)',\n      selected: 'rgba(0,225,204,1)',\n      unselected: 'rgba(100,100,100,1)'\n    },\n    style: {\n      maxWidth: '100%',\n      maxHeight: '90vh'\n    },\n    base64Image: false\n  }\n};\n\nexports.default = Boundingbox;\nmodule.exports = exports['default'];"]},"metadata":{},"sourceType":"script"}